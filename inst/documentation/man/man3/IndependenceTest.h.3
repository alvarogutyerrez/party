.TH "IndependenceTest.h" 3 "16 Jun 2009" "party" \" -*- nroff -*-
.ad l
.nh
.SH NAME
IndependenceTest.h \- 
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBC_GlobalTest\fP (SEXP learnsample, SEXP weights, SEXP fitmem, SEXP varctrl, SEXP gtestctrl, double minsplit, double *teststat, double *criterion, int depth)"
.br
.ti -1c
.RI "void \fBC_TeststatPvalue\fP (const SEXP linexpcov, const SEXP varctrl, double *ans_teststat, double *ans_pvalue)"
.br
.ti -1c
.RI "void \fBC_TeststatCriterion\fP (const SEXP linexpcov, const SEXP varctrl, double *ans_teststat, double *ans_criterion)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void C_GlobalTest (const SEXP learnsample, const SEXP weights, SEXP fitmem, const SEXP varctrl, const SEXP gtctrl, const double minsplit, double * ans_teststat, double * ans_criterion, int depth)"
.PP
Perform a global test on independence of a response and multiple inputs 
.br
 
.PP
\fBParameters:\fP
.RS 4
\fIlearnsample\fP an object of class `LearningSample' 
.br
\fIweights\fP case weights 
.br
\fIfitmem\fP an object of class `TreeFitMemory' 
.br
\fIvarctrl\fP an object of class `VariableControl' 
.br
\fIgtctrl\fP an object of class `GlobalTestControl' 
.br
\fIminsplit\fP minimum sum of weights to proceed 
.br
\fIans_teststat\fP return value; vector of test statistics 
.br
\fIans_criterion\fP return value; vector of node criteria (adjusted) pvalues or raw test statistics 
.br
\fIdepth\fP an integer giving the depth of the current node 
.RE
.PP

.PP
Definition at line 130 of file IndependenceTest.c.
.PP
References AGGREGATED, BONFERRONI, C_ExpectCovarInfluence(), C_LinStatExpCov(), C_LinStatExpCovMPinv(), C_MonteCarlo(), C_SampleNoReplace(), C_tempweights(), C_TeststatCriterion(), get_dontuse(), get_dontusetmp(), get_mtry(), get_ninputs(), get_nobs(), get_randomsplits(), get_test_trafo(), get_teststat(), get_testtype(), get_tol(), get_transformation(), get_varmemory(), has_missings(), MONTECARLO, ncol(), nrow(), PL2_expcovinfSym, PL2_inputsSym, PL2_responsesSym, PL2_sumweightsSym, TESTSTATISTIC, and UNIVARIATE.
.PP
Referenced by C_Node(), and R_GlobalTest().
.SS "void C_TeststatCriterion (const SEXP linexpcov, const SEXP varctrl, double * ans_teststat, double * ans_criterion)"
.PP
Computes the test statistic and the node criterion 
.br
 
.PP
\fBParameters:\fP
.RS 4
\fIlinexpcov\fP an object of class `LinStatExpectCovar' 
.br
\fIvarctrl\fP an object of class `VariableControl' 
.br
\fIans_teststat;\fP return value, the test statistic 
.br
\fIans_criterion;\fP return value, thep-value 
.RE
.PP

.PP
Definition at line 53 of file IndependenceTest.c.
.PP
References C_TeststatPvalue(), and get_pvalue().
.PP
Referenced by C_GlobalTest(), and C_MonteCarlo().
.SS "void C_TeststatPvalue (const SEXP linexpcov, const SEXP varctrl, double * ans_teststat, double * ans_pvalue)"
.PP
Computes the test statistic and, if requested, the corresponding P-value for a linear statistic 
.br
 
.PP
\fBParameters:\fP
.RS 4
\fIlinexpcov\fP an object of class `LinStatExpectCovar' 
.br
\fIvarctrl\fP an object of class `VariableControl' 
.br
\fIans_teststat;\fP return value, the test statistic 
.br
\fIans_pvalue;\fP return value, the p-value 
.RE
.PP

.PP
Definition at line 21 of file IndependenceTest.c.
.PP
References C_ConditionalPvalue(), C_TestStatistic(), get_abseps(), get_maxpts(), get_pvalue(), get_releps(), get_teststat(), and get_tol().
.PP
Referenced by C_IndependenceTest(), and C_TeststatCriterion().
.SH "Author"
.PP 
Generated automatically by Doxygen for party from the source code.
