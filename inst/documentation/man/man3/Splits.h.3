.TH "Splits.h" 3 "30 Nov 2007" "party" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Splits.h \- 
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBC_split\fP (const double *x, int p, const double *y, int q, const double *weights, int n, const int *orderx, SEXP splitctrl, SEXP linexpcov2sample, SEXP expcovinf, double *cutpoint, double *maxstat, double *statistics)"
.br
.ti -1c
.RI "void \fBC_splitcategorical\fP (const int *codingx, int p, const double *y, int q, const double *weights, int n, double *standstat, SEXP splitctrl, SEXP linexpcov2sample, SEXP expcovinf, double *cutpoint, int *levelset, double *maxstat, double *statistics)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void C_split (const double * x, int p, const double * y, int q, const double * weights, int n, const int * orderx, SEXP splitctrl, SEXP linexpcov2sample, SEXP expcovinf, double * cutpoint, double * maxstat, double * statistics)"
.PP
Search for a cutpoint in a ordered variable x maximizing a two-sample statistic w.r.t. (the influence function of ) the response variable y. 
.PP
\fBParameters:\fP
.RS 4
\fIx\fP raw numeric measurements 
.br
\fIp\fP dimension of the transformation 
.br
\fIy\fP values of the influence function 
.br
\fIq\fP dimension of the influence function 
.br
\fIweights\fP case weights 
.br
\fIn\fP number of observations 
.br
\fIorderx\fP the ordering of the transformations, i.e. R> order(x) 
.br
\fIsplitctrl\fP an object of class `SplitControl' 
.br
\fIlinexpcov2sample\fP an (uninitialized) object of class `LinStatExpectCovar' with p = 1 
.br
\fIexpcovinf\fP an initialized object of class `ExpectCovarInfluence' 
.br
\fIcutpoint\fP return value; pointer to a double for the cutpoint in x 
.br
\fImaxstat\fP return value; pointer to a double for the maximal test statistic 
.br
\fIstatistics\fP return value; pointer to a n-dim double for the statistics 
.RE
.PP

.PP
Definition at line 33 of file Splits.c.
.PP
References get_tol().
.PP
Referenced by C_Node(), and R_split().
.SS "void C_splitcategorical (const int * codingx, int p, const double * y, int q, const double * weights, int n, double * standstat, SEXP splitctrl, SEXP linexpcov2sample, SEXP expcovinf, double * cutpoint, int * levelset, double * maxstat, double * statistics)"
.PP
Search for a cutpoint in a unordered factor x maximizing a two-sample statistic w.r.t. (the influence function of ) the response variable y. 
.PP
\fBParameters:\fP
.RS 4
\fIcodingx\fP the coding of x, i.e. as.numeric(x) 
.br
\fIp\fP dimension of the transformation 
.br
\fIy\fP values of the influence function 
.br
\fIq\fP dimension of the influence function 
.br
\fIweights\fP case weights 
.br
\fIn\fP number of observations 
.br
\fIcodingx\fP the coding of x, i.e. as.numeric(x) 
.br
\fIstandstat\fP the vector of the standardized statistics for x, y, weights 
.br
\fIsplitctrl\fP an object of class `SplitControl' 
.br
\fIlinexpcov2sample\fP an (uninitialized) object of class `LinStatExpectCovar' with p = 1 
.br
\fIexpcovinf\fP an initialized object of class `ExpectCovarInfluence' 
.br
\fIcutpoint\fP return value; pointer to a double for the cutpoint in x 
.br
\fIlevelset\fP return value; pointer to a p-dim 0/1 integer 
.br
\fImaxstat\fP return value; pointer to a double for the maximal test statistic 
.br
\fIstatistics\fP return value; pointer to a n-dim double for the statistics 
.RE
.PP

.PP
Definition at line 217 of file Splits.c.
.PP
References get_tol().
.PP
Referenced by C_Node(), and R_splitcategorical().
.SH "Author"
.PP 
Generated automatically by Doxygen for party from the source code.
