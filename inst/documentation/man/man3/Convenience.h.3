.TH "Convenience.h" 3 "30 Jan 2008" "party" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Convenience.h \- 
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBC_LinStatExpCov\fP (const double *x, const int p, const double *y, const int q, const double *weights, const int n, const int cexpcovinf, SEXP expcovinf, SEXP ans)"
.br
.ti -1c
.RI "void \fBC_LinStatExpCovMPinv\fP (SEXP linexpcov, double tol)"
.br
.ti -1c
.RI "void \fBC_MLinearStatistic\fP (SEXP linexpcov, SEXP ScoreMatrix, SEXP ans)"
.br
.ti -1c
.RI "double \fBC_TestStatistic\fP (const SEXP linexpcov, const int type, const double tol)"
.br
.ti -1c
.RI "double \fBC_ConditionalPvalue\fP (const double tstat, SEXP linexpcov, const int type, double tol, int *maxpts, double *releps, double *abseps)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "double C_ConditionalPvalue (const double tstat, SEXP linexpcov, const int type, double tol, int * maxpts, double * releps, double * abseps)"
.PP
Compute asymptotic conditional P-value 
.PP
\fBParameters:\fP
.RS 4
\fItstat\fP test statistic 
.br
\fIlinexpcov\fP an object of class `LinStatExpectCovar' 
.br
\fItype\fP integer, 1 (maxabs) or 2 (quadform) 
.br
\fItol\fP tolerance 
.br
\fImaxpts\fP argument to C_maxabsConditionalPvalue 
.br
\fIreleps\fP argument to C_maxabsConditionalPvalue 
.br
\fIabseps\fP argument to C_maxabsConditionalPvalue 
.RE
.PP

.PP
Definition at line 99 of file Convenience.c.
.PP
References C_maxabsConditionalPvalue(), C_quadformConditionalPvalue(), get_dimension(), MAXABS, PL2_covarianceSym, PL2_rankSym, and QUADFORM.
.SS "void C_LinStatExpCov (const double * x, const int p, const double * y, const int q, const double * weights, const int n, const int cexpcovinf, SEXP expcovinf, SEXP ans)"
.PP
Linear statistic of x, y, and weights and its conditional expectation and covariance 
.br
 
.PP
\fBParameters:\fP
.RS 4
\fIx\fP values of the transformation 
.br
\fIp\fP dimension of the transformation 
.br
\fIy\fP values of the influence function 
.br
\fIq\fP dimension of the influence function 
.br
\fIweights\fP case weights 
.br
\fIn\fP number of observations 
.br
\fIcexpcovinf\fP logical: recompute exp and cov of the influence fct 
.br
\fIexpcovinf\fP an object of class `ExpectCovarInfluence' 
.br
\fIans\fP return value; an object of class `LinStatExpectCovar' 
.RE
.PP

.PP
Definition at line 26 of file Convenience.c.
.PP
References C_ExpectCovarInfluence(), C_ExpectCovarLinearStatistic(), C_LinearStatistic(), and PL2_linearstatisticSym.
.SS "void C_LinStatExpCovMPinv (SEXP linexpcov, double tol)"
.PP
Moore-Penrose inverse of the covariance matrix 
.br
 
.PP
\fBParameters:\fP
.RS 4
\fIlinexpcov\fP an object of class `LinStatExpectCovarMPinv' 
.br
\fItol\fP tolerance 
.RE
.PP

.PP
Definition at line 46 of file Convenience.c.
.PP
References C_MPinv(), PL2_covarianceSym, and PL2_svdmemSym.
.SS "void C_MLinearStatistic (SEXP linexpcov, SEXP ScoreMatrix, SEXP ans)"
.PP
.SS "double C_TestStatistic (const SEXP linexpcov, const int type, const double tol)"
.PP
Compute test statistic 
.PP
\fBParameters:\fP
.RS 4
\fIlinexpcov\fP an object of class `LinStatExpectCovar' 
.br
\fItype\fP integer, 1 (maxabs) or 2 (quadform) 
.br
\fItol\fP tolerance 
.RE
.PP

.PP
Definition at line 59 of file Convenience.c.
.PP
References C_maxabsTestStatistic(), C_quadformTestStatistic(), get_dimension(), PL2_covarianceSym, PL2_expectationSym, PL2_linearstatisticSym, and PL2_MPinvSym.
.SH "Author"
.PP 
Generated automatically by Doxygen for party from the source code.
